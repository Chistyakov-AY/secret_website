c
com
Comment.first
Comment.all
com
com.destroy
com = Comment.first
com.delete
com
com.destroy
com
com = @comment
c
c = @comment
@comment.destroy
@comment
c
c.delete
c = Comment.first
Comment.delete_at(113)
Comment.all
@comment
@comment.delete
@comment
@comment.destroy!
@comment
@comment.destroy
@comment
c
current_user.posts
current_user
c
current_user.posts
current_user
c
—Å
@posts.first
@post.first
c
@posts
@post
c
@post.image.class.all
@post.class.all
@post.image.key.class
@post.image.class
@image.class
image.class
@post.class
ActiveStorage::Attached::One.all
@post.image.class
@post.image(id).key
@post.image.key
image
@image
@post.image
@post
c
Post.first.comments
Post.first.comment
Post.comment
Post.all
Post.ll
User.all
params
@post
current_user
c
User.create!(name: "Test", email: "test@tes.com", password: "111111")
User.create!(name: "Test", email: "test@test.com", password: "111111")
User.create(name: "Test", email: "test@test.com", password: "111111")
user
params
c
params
c
@post.image
@post.image.attached?
@post.images.attached?
c
@post.images.attached?
@post.images.attach(params[:images])
@post.images
@post.images.attached?
@post
c
@post
c
params
@post
@post.image.attached?
@post_with_image.image.attached?
@post_with_image
c
@post.image
@post.image.attached?
c
@post.image.attached?
params
@post
@image
c
@image
@post
@post.image.attached?
c
@post.image.attached?
@post.images.attached?
@image
c
@image = @post.image.attach(params[:image])
@post = current_user.posts.new(post_params)
c
ccc
@post.images.attached?
@images
params
@image
c
z
c
params[:my]
params
c
params[:post][:image]
params[:post]
params.keys
params.keys\
params[:image]
params
